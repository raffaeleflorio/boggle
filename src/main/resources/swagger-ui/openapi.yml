openapi: '3.0.3'

info:
  title: Boggle HTTP API
  version: 1.0.0-SNAPSHOT
  description: Boggle is a word game where the objective is to find the as many words as possibile in a grid

externalDocs:
  url: https://en.wikipedia.org/wiki/Boggle
  description: Wikipedia about Boggle

tags:
  - name: grid
    description: Endpoints about grid
  - name: organizer
    description: Endpoints for organizer
  - name: player
    description: Endpoints for player

paths:
  /grids:
    post:
      summary: Creates a grid
      operationId: createGrid
      security:
        - xApiKey: [ ]
      requestBody:
        $ref: '#/components/requestBodies/GridSpec'
      responses:
        201:
          description: Grid created
          headers:
            Location:
              description: The created grid URI
              schema:
                type: string
                format: uri
        400:
          description: Bad specification
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      tags:
        - grid
        - organizer
  /grids/{grid}:
    get:
      summary: Gets a grid
      operationId: getGrid
      parameters:
        - $ref: '#/components/parameters/Grid'
      responses:
        200:
          description: Grid found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
        404:
          $ref: '#/components/responses/GridNotFound'
      tags:
        - grid
        - player
    delete:
      summary: Deletes a grid
      operationId: deleteGrid
      security:
        - xApiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Grid'
      responses:
        204:
          description: Grid deleted
        404:
          $ref: '#/components/responses/GridNotFound'
      tags:
        - grid
        - organizer
  /grids/{grid}/score:
    post:
      summary: Builds a score
      operationId: postScore
      security:
        - xApiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Grid'
      requestBody:
        $ref: '#/components/requestBodies/Word'
      responses:
        200:
          description: Score built
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/GridNotFound'
      tags:
        - grid
        - organizer
  /players/{player}/grids/{grid}/score:
    post:
      summary: Builds a score
      operationId: postScorePlayer
      parameters:
        - $ref: '#/components/parameters/Player'
        - $ref: '#/components/parameters/Grid'
      requestBody:
        $ref: '#/components/requestBodies/Word'
      responses:
        200:
          description: Score built
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        404:
          $ref: '#/components/responses/GridNotFound'
        410:
          $ref: '#/components/responses/GridExpired'
        429:
          $ref: '#/components/responses/TooManyAttempts'
      tags:
        - grid
        - player

components:
  securitySchemes:
    xApiKey:
      type: apiKey
      name: X-API-KEY
      in: header
  responses:
    Unauthorized:
      description: Missing API key
    Forbidden:
      description: Expired API key
    GridNotFound:
      description: Grid didn't found
    GridExpired:
      description: Grid expired
    TooManyAttempts:
      description: Too many attempts
  requestBodies:
    GridSpec:
      description: A specification to create a grid
      content:
        application/json:
          schema:
            type: object
            required:
              - lang
              - size
              - duration
            properties:
              lang:
                $ref: '#/components/schemas/Lang'
              size:
                $ref: '#/components/schemas/Size'
              duration:
                description: Duration in minutes
                type: integer
                minimum: 1
                maximum: 10
                default: 3
    Word:
      description: A word
      content:
        application/json:
          schema:
            type: object
            required:
              - dice
            properties:
              dice:
                type: array
                items:
                  type: string
                  example: [ W, O, R, D ]
  parameters:
    Grid:
      name: grid
      in: path
      required: true
      description: The grid UUID
      schema:
        $ref: '#/components/schemas/Id'
    Player:
      name: player
      in: path
      required: true
      description: The player UUID
      schema:
        $ref: '#/components/schemas/Id'
  schemas:
    Id:
      type: string
      format: uuid
    Lang:
      type: string
      example: it
    Size:
      type: string
      example: '4x4'
    Layout:
      type: string
      example: ABCDEFGHILMNOPQuR
    Deadline:
      type: string
      format: date-time
    Grid:
      type: object
      required:
        - id
        - size
        - lang
        - layout
        - deadline
      properties:
        id:
          $ref: '#/components/schemas/Id'
        size:
          $ref: '#/components/schemas/Size'
        lang:
          $ref: '#/components/schemas/Lang'
        layout:
          $ref: '#/components/schemas/Layout'
        deadline:
          $ref: '#/components/schemas/Deadline'
    Score:
      type: object
      required:
        - score
      properties:
        score:
          type: integer
          minimum: 0
